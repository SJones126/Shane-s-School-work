package lab1;

import java.util.Arrays;
import java.io.*;
import java.util.Scanner;
public class HugeInteger 
{
    private static final int NUM_DIGITS = 40;
    private int digits[] = new int[NUM_DIGITS];
    private boolean positive;

// Constructor
    public HugeInteger (String num){
        String parts [] = num.split(" ");
        digits = new int[parts.length];
        for(int x = 0; x < parts.length; x++) {
            digits[x] = Integer.parseInt(parts[x]);
        }
    }

// find the non zero position
    public int findFirstNonZeroPosition(){
        int location = NUM_DIGITS-1;
        for (int n = 0; n < digits.length; n++){
            if (digits[n] > 0){
                location = n;
                break;
            }
        }
        return location;
    }

// figures if hi is equal to h2
    public boolean isEqualTo(HugeInteger hi){
        if(Arrays.equals(this.digits, hi.digits))
        {
            return true;
        }
        else 
        {
            return false;
        }
    }

// Figures if it si greater than
    public boolean isGreaterThan(HugeInteger hi){
        //see if it is a different sign
        if (this.positive && (!hi.positive)){
            return true;
        }
        else if (!this.positive && hi.positive)
        {
            return false;
        }
        //same sign
        else 
        {
            //see if the first number position is less than second
            if (findFirstNonZeroPosition() > hi.findFirstNonZeroPosition()) {
                if (positive)
                    return false;
                else
                    return true;
            }
            //see is the second is less than the first in legnth
            else if (findFirstNonZeroPosition() < 
                    hi.findFirstNonZeroPosition()) 
            {
                if (positive)
                    return true;
                else
                    return false;
            }
            //if they have the same length
            else 
            {
                for (int i = 0; i < digits.length; i++ ) {
                    if ( this.digits[i] > hi.digits[i] )
                        if (positive)
                            return true;
                        else
                            return false;
                }
                if (positive)
                    return false;
                else
                    return true;
            }
        }
    }
    //If the first is not equal to the second
    public boolean isNotEqualTo(HugeInteger hi)
    {
        if(Arrays.equals(this.digits, hi.digits)){
            return false;
        }
        else 
        {
            return true;
        }
    }
    // sees the first is less than the second
    public boolean isLessThan(HugeInteger hi)
    {
        return (!isGreaterThan(hi) || isEqualTo(hi) );
    }
    //sees if first is greater or equal to second
    public boolean isGreaterThanOrEqualTo(HugeInteger hi){
        return !isLessThan(hi);
    }
    //sees if first is less or equal the second
    public boolean isLessThanOrEqualTo(HugeInteger hi){
        return !isGreaterThan(hi);
    }
    //adding of the variable 
    public void add(HugeInteger hi)
    {
        if(positive!=hi.positive)
        {
            if(this.positive)
            {
                hi.negate();
                if(this.isGreaterThan(hi))
                {
                    this.digits = subtractArrayDigits(this.digits, hi.digits);
                }
                else
                {
                    this.digits = subtractArrayDigits(hi.digits, this.digits);
                    negate();
                }
                hi.negate();
            }
            else
            {
            }
        }
        else
        {
            digits = addArrayDigits(this.digits, hi.digits);
        }
    }
    //does subtracting of variables
    public void subtract(HugeInteger hi){
        if(positive!=hi.positive){
            if(this.positive){
                hi.negate();
                if(this.isGreaterThan(hi)){
                    this.digits = addArrayDigits(this.digits, hi.digits);
                }
                else
                {
                    this.digits = addArrayDigits(hi.digits, this.digits);
                    negate();
                }
                hi.negate();
            }
            else
            {
            }
        }
        else
        {
            digits = subtractArrayDigits(this.digits, hi.digits);
        }
    }
    //multiplies the variables
    public void multiply(HugeInteger hi){
        for (int i = 0; i < digits.length; ++i) {
            digits[i] = this.digits[i] * hi.digits[i];
        }
    }
    public void negate(){
        positive =! positive;
    }
    //sees if the variable is zero
    public boolean isZero(){
        for(int i = 0; i < digits.length; i++)
            if(digits[i]!= 0)
                return false;
        return true;
    }
    //puts it into a string
    public String toString() {
        String str = "";
        int i;
        for(i = digits.length -1; i >= 0; i--) {
            if(digits[i] != 0)
                break;
        }
        for(int j = i; j >= 0; j--) {
            str = digits[j] + str;
        }
        return str;
    }
    //subtracts the array
    private static int[] subtractArrayDigits(int[] array1, int[] array2){
        for (int i = 0; i < array1.length; ++i) 
        {
            array1[i] = array1[i] - array2[i];
        }
        return array1;
    }
    //adds them
    private static int[] addArrayDigits(int[] array1, int[] array2){
        for (int i = 0; i < array1.length; ++i) 
        {
            array1[i] = array1[i] + array2[i];
        }
        return array1;
    }
    //main checks to see if everthing is phrased correctly
    // Having trouble making the statements come out correctly
    public static void main(String args[]){
        HugeInteger h1, h2;
        String num;
        Scanner scan=new Scanner(System.in);
        System.out.print("Please enter the first huge integer (h1): ");
        num=scan.nextLine();
        h1=new HugeInteger(num);
        System.out.print("Please enter the second huge integer (h2): ");
        num=scan.nextLine();
        h2=new HugeInteger(num);
        if(h1.isEqualTo(h2)){
            System.out.println("h1 is equal to h2.");
        }
        else{
            System.out.println("h1 is not equal to h2.");
        }
        if (h1.isGreaterThan(h2)){
            System.out.println("h1 is greater than h2.");
        }
        else{
            System.out.println("h1 is less than to h2.");
        }
        if(h1.isGreaterThanOrEqualTo(h2)){
            System.out.println("h1 is greater than or equal to h2.");
        }
        else{
            System.out.println("h1 is less than or equal to h2.");
        }
        h1.add(h2);
        System.out.printf("h1 + h2 = %s\n",h1);
        h1.subtract(h2);
        System.out.printf("h1 - h2 = %s\n",h1);
        h1.add(h2);
        h1.multiply(h2);
        System.out.printf("h1 * h2 = %s\n",h1);
    }
}